class TelaEntradaMaterial(TelaBaseComESC):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.materiais = []
        self.init_ui()
        self.showMaximized()

    def init_ui(self):
        self.setWindowTitle('Registro de Entrada de Material - Futurista')
        self.resize(800, 600)
        self.setMinimumSize(600, 400)

        main_layout = QVBoxLayout(self)
        main_layout.setContentsMargins(20, 20, 20, 20)
        main_layout.setSpacing(20)

        # Título
        title_label = QLabel("Registro de Entrada de Material")
        title_label.setAlignment(Qt.AlignCenter)
        title_label.setStyleSheet("font-size: 24px; font-weight: bold; color: #0D47A1; background-color: transparent;")
        title_label.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Preferred)
        main_layout.addWidget(title_label)

        # Criar um QScrollArea para envolver o formulário
        scroll_area = QScrollArea()
        scroll_area.setWidgetResizable(True)
        scroll_area.setFrameShape(QFrame.NoFrame)
        main_layout.addWidget(scroll_area)

        # Frame para o formulário
        form_frame = QFrame()
        form_frame.setObjectName("formFrame")
        scroll_area.setWidget(form_frame)

        form_layout = QFormLayout(form_frame)
        form_layout.setLabelAlignment(Qt.AlignRight)
        form_layout.setFormAlignment(Qt.AlignLeft | Qt.AlignTop)
        form_layout.setHorizontalSpacing(20)
        form_layout.setVerticalSpacing(15)

        # Checkbox para Ordem de Serviço
        self.os_checkbox = QCheckBox("Entrada com Ordem de Serviço")
        self.os_checkbox.stateChanged.connect(self.toggle_os_input)
        form_layout.addRow(self.os_checkbox)

        # Input para Ordem de Serviço (inicialmente oculto)
        self.os_input = QLineEdit()
        self.os_input.setPlaceholderText("Digite o número da OS")
        self.os_input.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        self.os_input.hide()
        form_layout.addRow(QLabel('Ordem de Serviço (OS):'), self.os_input)

        # Tipo de Documento (inicialmente visível)
        self.tipo_documento_widget = QWidget()
        tipo_documento_layout = QFormLayout(self.tipo_documento_widget)
        self.tipo_documento_combo = QComboBox()
        self.tipo_documento_combo.addItems(['Selecione o tipo', 'Nota Fiscal', 'Solicitação de Material'])
        self.tipo_documento_combo.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        self.tipo_documento_combo.currentIndexChanged.connect(self.on_tipo_documento_changed)
        tipo_documento_layout.addRow(QLabel('Tipo de Documento:'), self.tipo_documento_combo)

        self.stacked_widget = QStackedWidget()

        # Página para Nota Fiscal
        nf_page = QWidget()
        nf_layout = QHBoxLayout(nf_page)
        self.numero_nf_input = QLineEdit()
        self.numero_nf_input.setPlaceholderText("Digite o número da NF")
        self.numero_nf_input.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        nf_layout.addWidget(self.numero_nf_input)
        self.stacked_widget.addWidget(nf_page)

        # Página para Solicitação de Material
        sm_page = QWidget()
        sm_layout = QHBoxLayout(sm_page)
        self.numero_sm_input = QLineEdit()
        self.numero_sm_input.setPlaceholderText("Digite o número da SM")
        self.numero_sm_input.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        sm_layout.addWidget(self.numero_sm_input)
        self.stacked_widget.addWidget(sm_page)

        tipo_documento_layout.addRow(QLabel('Número do Documento:'), self.stacked_widget)
        form_layout.addRow(self.tipo_documento_widget)

        self.codigo_input = QLineEdit()
        self.codigo_input.setPlaceholderText("Digite o código do material")
        self.codigo_input.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        self.codigo_input.textChanged.connect(self.buscar_material_por_codigo)
        form_layout.addRow(QLabel('Código:'), self.codigo_input)

        self.produto_combo = QComboBox()
        self.produto_combo.setPlaceholderText('Selecione um produto')
        self.produto_combo.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        form_layout.addRow(QLabel('Produto:'), self.produto_combo)

        self.quantidade_input = QLineEdit()
        self.quantidade_input.setPlaceholderText("Quantidade")
        self.quantidade_input.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        self.quantidade_input.setValidator(QDoubleValidator(0.0, 1000000.0, 2))
        form_layout.addRow(QLabel('Quantidade:'), self.quantidade_input)

        # Adicionar o combo box para a unidade de medida
        self.unidade_medida_combo = QComboBox()
        self.unidade_medida_combo.addItems(['Unidade', 'Metro', 'KG'])
        self.unidade_medida_combo.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        form_layout.addRow(QLabel('Unidade de Medida:'), self.unidade_medida_combo)

        self.observacao_input = QLineEdit()
        self.observacao_input.setPlaceholderText("Digite uma observação (opcional)")
        self.observacao_input.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        form_layout.addRow(QLabel('Observação:'), self.observacao_input)

        # Botão de adicionar material
        add_button_layout = QHBoxLayout()
        add_button_layout.addStretch()
        self.add_material_button = QPushButton('Adicionar Material')
        self.add_material_button.setFixedSize(200, 40)
        self.add_material_button.clicked.connect(self.adicionar_material)
        add_button_layout.addWidget(self.add_material_button)
        add_button_layout.addStretch()
        form_layout.addRow(add_button_layout)

        # Tabela de materiais adicionados
        self.tabela_materiais = QTableWidget()
        self.tabela_materiais.setColumnCount(4)
        self.tabela_materiais.setHorizontalHeaderLabels(['Código', 'Produto', 'Quantidade', 'Ações'])
        self.tabela_materiais.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)
        self.tabela_materiais.verticalHeader().setVisible(False)
        self.tabela_materiais.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        self.tabela_materiais.setEditTriggers(QTableWidget.NoEditTriggers)
        self.tabela_materiais.setSelectionBehavior(QTableWidget.SelectRows)
        self.tabela_materiais.setAlternatingRowColors(True)
        main_layout.addWidget(self.tabela_materiais)

        # Botão de salvar
        save_button_layout = QHBoxLayout()
        save_button_layout.addStretch()
        self.save_button = QPushButton('Salvar Entrada')
        self.save_button.setFixedSize(200, 40)
        self.save_button.clicked.connect(self.salvar_entrada)
        save_button_layout.addWidget(self.save_button)
        save_button_layout.addStretch()
        main_layout.addLayout(save_button_layout)

        self.aplicar_estilo()
        self.carregar_produtos()
